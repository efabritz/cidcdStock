name: Тестирование и развертывание проекта

on:
    push:
        branches: [cicd] #cicd название ветки
jobs:
    tests:
        runs-on: ubuntu-20.04
        env:
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            DEBUG: "0"
            ALLOWED_HOSTS:  ${{secrets.ALLOWED_HOSTS}}
            DB_ENGINE: ${{secrets.DB_ENGINE}}
            DB_USER: ${{secrets.DB_USER}}
            DB_PASSWORD: ${{secrets.DB_PASSWORD}}
            DB_NAME: ${{secrets.DB_NAME}}
            DB_HOST: ${{secrets.DB_HOST}}
            DB_PORT: ${{secrets.DB_PORT}}
        services:
            postgres_main:
                image: postgres:12
                env:
                   POSTGRES_DB: ${{env.DB_NAME}}
                   POSTGRES_USER: ${{env.DB_USER}}
                   POSTGRES_PASSWORD: ${{env.DB_PASSWORD}}
                ports:
                  - 5432:5432
                options:
                    --health-cmd pd_isready
                    --health-interval 5s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Проверяем репозиторий на наличие изменений
              uses: actions/checkout@v2 #entwickler schritt
            - name: Установка питона и  настройка виртуального окружения
              uses: actions/setup-python@v3
              with:
                python-version: 3.9
            - name: установка зависимосетй
              run: pip install -r requirements.txt

            - name: линтинг #pip install flake8 // будет проверять корретность когда на питон правила//
              run: flake8 logistic/ --exclude logistic/migrations/
            - name: тестирование
              run: python manage.py test
              env:
                  SECRET_KEY: ${{env.secrets.SECRET_KEY}}
                  DEBUG: "0"
                  ALLOWED_HOSTS:  ${{env.secrets.ALLOWED_HOSTS}}
                  DB_ENGINE: ${{env.secrets.DB_ENGINE}}
                  DB_USER: ${{env.secrets.DB_USER}}
                  DB_PASSWORD: ${{env.secrets.DB_PASSWORD}}
                  DB_NAME: ${{env.secrets.DB_NAME}}
                  DB_HOST: ${{env.secrets.DB_HOST}}
                  DB_PORT: ${{env.secrets.DB_PORT}}
#            - name: Deploy
#                        uses: appleboy/ssh-action@master
#                        with: # SSH_HOST : IP ADRESS, SSH_USER:.. , SSH_PASSWORD:.. в github
#
#                        host:  ${{secrets.SSH_HOST}}
#                        username:  ${{secrets.SSH_USER}}
#                        password:  ${{secrets.SSH_PASSWORD}}
#
#                        script: //действие после входа не сервер